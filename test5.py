import os
from datetime import datetime, timedelta

import matplotlib.pyplot as plt
import pandas as pd

a = [[32400, 36888], [36888, 36967], [36967, 37000], [37000, 37021], [37021, 37052], [37052, 37112], [37112, 37208], [37208, 37275], [37275, 37417], [37417, 37586], [37586, 37656], [37656, 37731], [37731, 37802], [37802, 38003], [38003, 38107], [38107, 38120], [38120, 38184], [38184, 38234], [38234, 38303], [38303, 38364], [38364, 38376], [38376, 38410], [38410, 38485], [38485, 38619], [38619, 38698], [38698, 38812], [38812, 38938], [38938, 39125], [39125, 39318], [39318, 39556], [39556, 39678], [39678, 39771], [39771, 39816], [39816, 40024], [40024, 40095], [40095, 40154], [40154, 40186], [40186, 40218], [40218, 40263], [40263, 40341], [40341, 40398], [40398, 40619], [40619, 40716], [40716, 41469], [41469, 41480], [41480, 41511], [41511, 41648], [41648, 41766], [41766, 41851], [41851, 41931], [41931, 42149], [42149, 42258], [42258, 42334], [42334, 43484], [43484, 43626], [43626, 43705], [43705, 43860], [43860, 44139], [44139, 44245], [44245, 44294], [44294, 44375], [44375, 46311], [46311, 47870], [47870, 48033], [48033, 48135], [48135, 48325], [48325, 48478], [48478, 48554], [48554, 48600], [48600, 48742], [48742, 48820], [48820, 48907], [48907, 49259], [49259, 49813], [49813, 49864], [49864, 49929], [49929, 
50041], [50041, 50188], [50188, 50361], [50361, 50456], [50456, 50549], [50549, 50714], [50714, 50794], [50794, 50892], [50892, 50993], [50993, 51136], [51136, 51227], [51227, 51287], [51287, 51364], [51364, 52415], [52415, 52539], [52539, 52622], [52622, 52716], [52716, 52752], [52752, 52788], [52788, 52846], [52846, 52902], [52902, 53142], [53142, 53222], [53222, 53259], [53259, 53507], [53507, 53548], [53548, 53638], [53638, 53798], [53798, 53911], [53911, 53991], [53991, 54105], [54105, 54185], [54185, 54234], [54234, 54440], [54440, 54555], [54555, 54683], [54683, 54812], [54812, 54859], [54859, 54962], [54962, 55018], [55018, 55187], [55187, 55283], [55283, 55684], [55684, 55773], [55773, 55792], [55792, 55814], [55814, 55895], [55895, 55922], [55922, 56993], [56993, 57100], [57100, 57164], [57164, 57510], [57510, 57682], [57682, 57823], [57823, 57885], [57885, 57971], [57971, 58230], [58230, 58239], [58239, 58370], [58370, 61200]]


def numbers():
    a0 = []
    for i in a:
        if i[2] < -10:
            res1 = timedelta(seconds=i[0])
            res2 = timedelta(seconds=i[1])
            a0.append([i, f"{res1}-{res2}"])
        a0.append(i[2])
    return a0


def save_schedule(time_list):
    plt.figure()
    plt.xlabel('колличество')
    plt.ylabel('интенсивность')
    time_for_graph = []
    for i in time_list:
        time_for_graph.append((i[0]-i[1])//60)
    plt.plot(time_for_graph)
    for i, v in enumerate(time_list):
        if (v[0]-v[1])//60 < -20:
            # Две переменные для отображения на графике без секунд.
            v0 = ':'.join(str(timedelta(seconds=v[0])).split(':')[:2])
            v1 = ':'.join(str(timedelta(seconds=v[1])).split(':')[:2])
            # i+1 один для смещения текста на графике, чтоб лучше видно было.
            plt.text(i+1, (v[0]-v[1])//60, f"{v0}-{v1}").set_rotation(88)
    plt.grid()
    plt.show()


if __name__ == '__main__':
    save_schedule(a)
    # print(numbers())
    # ti = timedelta(seconds=61200)
    # print(ti)
    # print(':'.join(str(ti).split(':')[:2]))